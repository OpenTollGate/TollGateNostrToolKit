#!/bin/sh /etc/rc.common

exec 1>/tmp/hotspot_manager.log 2>&1
set -x

START=99
STOP=15

USE_PROCD=1
PROG=/bin/sh

hotspot_interface="radio0"

start_service() {
    procd_open_instance
    procd_set_param command $PROG -c '
        # Function to get the hotspot SSID
        get_hotspot_ssid() {
            if [ -f "/nostr/shell/nostr_keys.json" ]; then
                npub=$(jq -r ".npub_hex" /nostr/shell/nostr_keys.json 2>/dev/null)
                if [ -n "$npub" ] && [ "$npub" != "null" ]; then
                    echo "TollGate_${npub:0:8}"
                    return
                fi
            fi
            
            # Fallback to MAC address if npub is not available
            mac_address=$(cat /sys/class/ieee80211/phy0/macaddress | sed "s/://g")
            echo "TollGate_${mac_address}"
        }

        hotspot_ssid=$(get_hotspot_ssid)

        # Set the SSID
        uci set wireless.default_radio0.ssid="$hotspot_ssid"
        uci commit wireless

	while true; do
	    echo "Checking conditions at $(date)"
		    if ping -c 1 8.8.8.8 >/dev/null 2>&1; then
		        echo "Internet is available"
		    else
        		echo "Internet is not available"
		fi

		    if ndsctl json >/dev/null 2>&1; then
		        echo "OpenNDS is responsive"
		    else
		        echo "OpenNDS is not responsive"
		    fi

    current_ssid=$(iwinfo $hotspot_interface info 2>/dev/null | grep "ESSID:" | awk -F'"' '{print $2}')
    echo "Current SSID: $current_ssid"
    echo "Expected SSID: $hotspot_ssid"

    if ping -c 1 8.8.8.8 >/dev/null 2>&1 && ndsctl json >/dev/null 2>&1; then
        if [ "$current_ssid" != "$hotspot_ssid" ]; then
            echo "Turning on WiFi hotspot"
            uci set wireless.default_radio0.disabled=0
            uci commit wireless
            wifi up
        else
            echo "WiFi hotspot is already on with correct SSID"
        fi
    else
        if [ "$current_ssid" = "$hotspot_ssid" ]; then
            echo "Turning off WiFi hotspot"
            uci set wireless.default_radio0.disabled=1
            uci commit wireless
            wifi down
        else
            echo "WiFi hotspot is already off or has a different SSID"
        fi
    fi
    sleep 60
done
    '
    procd_set_param respawn
    procd_close_instance
}

service_triggers() {
    procd_add_reload_trigger "network" "wireless"
}
